// Colors
$standard: rgb(30, 30, 30);
$green: rgb(0, 153, 0);
$highlight-color: 5;

// Units
$baseline: 1.5rem;

// TODO: Refine these units to get bigger type on smaller screens and acceptable line-length on bigger screens
$minScreen: 18.75rem;
$maxScreen: 50rem;
$minFont: 1rem;
$maxFont: 2rem;

$h1: 2rem;
$h2: 1.75rem;
$h3: 1.5rem;
$h4: 1.25rem;
$h5: 1rem;

// Mixin for fluid type
// Usage: @include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}
    // changed media-query to use em
    @media screen and (min-width: (($min-vw / 1rem) * 1em)) {
			@each $property in $properties {
				#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}
    // changed media-query to use em
		@media screen and (min-width: (($max-vw / 1rem) * 1em)) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

// add mixin to keep code DRY
// Usage: @include margin-top($line-height);
@mixin margin-top($value) {
  margin-top: calc((#{$baseline} - #{$value}) + #{$baseline});
}